ggplot(mBRCA_small,aes(y= ..density..))+geom_histogram(binwidth=0.1)+ geom_density()+ facet_grid(. ~ marker)
cancer_types<-c("BRCA","OV","KIRP","KIRC")
namep<-data(list=p)
mBRCA<-.GlobalEnv[[namep]]
val<-mBRCA[,2]
elmo2<-data.frame(typ_raka=cancer_types[1],val=val)
elmo2
for (j in 2:length(cancer_types))
{
p<-sprintf("%s.mRNA",cancer_types[j])
namep<-data(list=p)
mBRCA<-.GlobalEnv[[namep]]
val<-mBRCA[,2]
elmo2_bis<-data.frame(typ_raka=cancer_types[j],val=val)
elmo2<-rbind(elmo2,elmo2_bis)
}
elmo2
ggplot(elmo2,aes(x=val))+geom_histogram(binwidth=0.1)+ facet_grid(. ~ typ_raka)
ggplot(elmo2,aes(x=val))+geom_density+ facet_grid(. ~ typ_raka)
ggplot(elmo2,aes(x=val))+geom_density()+ facet_grid(. ~ typ_raka)
cancer_types<-c("BRCA","OV")
p<-sprintf("%s.mRNA",cancer_types[1])
namep<-data(list=p)
mBRCA<-.GlobalEnv[[namep]]
val<-mBRCA[,2]
elmo2<-data.frame(typ_raka=cancer_types[1],val=val)
for (j in 2:length(cancer_types))
{
p<-sprintf("%s.mRNA",cancer_types[j])
namep<-data(list=p)
mBRCA<-.GlobalEnv[[namep]]
val<-mBRCA[,2]
elmo2_bis<-data.frame(typ_raka=cancer_types[j],val=val)
}
elmo2<-rbind(elmo2,elmo2_bis)
ggplot(elmo2,aes(x=val))+geom_histogram(binwidth=0.1)+ facet_grid(. ~ typ_raka)
ggplot(elmo2,aes(x=val,colour=typ_raka))+geom_density()
ggplot(elmo2,aes(x=val))+geom_histogram(binwidth=0.1)+ facet_grid(. ~ typ_raka)
ggplot(elmo2,aes(x=val,colour=typ_raka)) +stat_ecdf()
ggplot(elmo2,aes(x=val,colour=typ_raka))+geom_vline() +stat_ecdf()
ggplot(elmo2,aes(x=val,colour=typ_raka))+geom_vline(stat = median) +stat_ecdf()
ggplot(elmo2,aes(x=val,colour=typ_raka))+geom_vline(stat = median) +stat_ecdf()
ggplot(elmo2,aes(x=val,colour=typ_raka))+geom_vline(stat = "median") +stat_ecdf()
ggplot(elmo2,aes(x=val,colour=typ_raka))+geom_vline(aes(xintercept = median(x))) +stat_ecdf()
ggplot(elmo2,aes(x=val,colour=typ_raka))+geom_vline(aes(xintercept = median(val))) +stat_ecdf()
ggplot(elmo2,aes(x=val,colour=typ_raka))+geom_vline(aes(xintercept = median(val),colour=typ_raka)) +stat_ecdf()
ggplot(elmo2,aes(x=val,colour=typ_raka))+geom_vline(aes(xintercept = median(val),fill=typ_raka)) +stat_ecdf()
ggplot(elmo2,aes(x=val,colour=typ_raka))+geom_vline(aes(xintercept = median(val[typ_raka==1]), color=typ_raka[typ_raka==1]))),fill=typ_raka)) +stat_ecdf()
ggplot(elmo2,aes(x=val,colour=typ_raka))+geom_vline(aes(xintercept = median(val[typ_raka==1]), color=typ_raka[typ_raka==1])) +stat_ecdf()
ggplot(elmo2,aes(x=val,colour=typ_raka))+geom_vline(aes(xintercept = median(val[typ_raka=="OV"]), color=typ_raka[typ_raka=="OV"])) +stat_ecdf()
(val[typ_raka=="OV"]
library(ggplot2)
library(survMisc)
library(RTCGA.mRNA)
library(RTCGA.clinical)
cancer_types<-c("BRCA","COAD","COADREAD","GBMLGG","KIPAN","KIRC","KIRP","LGG","LUAD","LUSC","OV","READ","UCEC")
j<-1
p<-sprintf("%s.mRNA",cancer_types[j])
q<-sprintf("%s.clinical",cancer_types[j])
p
namep<-data(list=p)
nameq<-data(list=q)
mBRCA<-.GlobalEnv[[namep]]
cBRCA<-.GlobalEnv[[nameq]]
cBRCA <- data.frame(time1=as.numeric(as.character(cBRCA$patient.days_to_death)),
time2=as.numeric(as.character(cBRCA$patient.days_to_last_followup)),
status = cBRCA$patient.vital_status,
barcode = cBRCA$patient.bcr_patient_barcode,
race=cBRCA$patient.race,
therapy=cBRCA$patient.drugs.drug.therapy_types.therapy_type)
cBRCA$time <- ifelse(is.na(cBRCA$time1), cBRCA$time2, cBRCA$time1)
mBRCA$bcr_patient_barcode<-tolower(substr(mBRCA$bcr_patient_barcode, 1, 12))
allBRCA<-merge(mBRCA,cBRCA,by.x="bcr_patient_barcode",by.y="barcode")
length_gen<-length(2:ncol(mBRCA))
histy<-list()
survy<-list()
geny<-c()
i<-2
tylko_jeden_gen <- allBRCA[,c(1,i,(ncol(mBRCA)+1):ncol(allBRCA))]
geny[i-1]<- paste0(cancer_types[j],"_",names(tylko_jeden_gen)[2])
geny
names(tylko_jeden_gen)[2]<-"val"
med<-median(na.omit(tylko_jeden_gen$val))
p<-survfit(Surv(time, status == "dead")~(val>med), data=tylko_jeden_gen)
survy[[i-1]]<-p
q <- tylko_jeden_gen$val
q
tylko_jeden_gen
q+ geom_histogram(binwidth = 0.1)
ggplot(q)
ggplot(q)+ geom_histogram(binwidth = 0.1)
ggplot(data.frame(q))+ geom_histogram(binwidth = 0.1)
q <- tylko_jeden_gen
q
ggplot(q,aes(val))+ geom_histogram(binwidth = 0.1)
q <- data.frame(tylko_jeden_gen$val)
ggplot(q,aes(val))+ geom_histogram(binwidth = 0.1)
q
tylko_jeden_gen[,val]
tylko_jeden_gen[,'val']
tylko_jeden_gen[,2]
tylko_jeden_gen[,'val',drop=FALSE]
q <- tylko_jeden_gen[,'val',drop=FALSE]
q<-readRDS(paste0("../",cancer_types[j],"/histy.RDS"))[[i]]
q <- tylko_jeden_gen[,'val',drop=FALSE]
ggplot(q,aes(val))+ geom_histogram(binwidth = 0.1)
ggplot(q,aes(val))+ geom_histogram(binwidth = 0.1)
names(tylko_jeden_gen)[2]
tylko_jeden_gen <- allBRCA[,c(1,i,(ncol(mBRCA)+1):ncol(allBRCA))]
names(tylko_jeden_gen)[2]
library(ggplot2)
library(survMisc)
library(RTCGA.mRNA)
library(RTCGA.clinical)
cancer_types<-c("BRCA","COAD","COADREAD","GBMLGG","KIPAN","KIRC","KIRP","LGG","LUAD","LUSC","OV","READ","UCEC")
for (j in 1:length(cancer_types))
{
p<-sprintf("%s.mRNA",cancer_types[j])
q<-sprintf("%s.clinical",cancer_types[j])
namep<-data(list=p)
nameq<-data(list=q)
mBRCA<-.GlobalEnv[[namep]]
cBRCA<-.GlobalEnv[[nameq]]
cBRCA <- data.frame(time1=as.numeric(as.character(cBRCA$patient.days_to_death)),
time2=as.numeric(as.character(cBRCA$patient.days_to_last_followup)),
status = cBRCA$patient.vital_status,
barcode = cBRCA$patient.bcr_patient_barcode,
race=cBRCA$patient.race,
therapy=cBRCA$patient.drugs.drug.therapy_types.therapy_type)
cBRCA$time <- ifelse(is.na(cBRCA$time1), cBRCA$time2, cBRCA$time1)
mBRCA$bcr_patient_barcode<-tolower(substr(mBRCA$bcr_patient_barcode, 1, 12))
allBRCA<-merge(mBRCA,cBRCA,by.x="bcr_patient_barcode",by.y="barcode")
length_gen<-length(2:ncol(mBRCA))
histy<-list()
survy<-list()
geny<-c()
for(i in 2:ncol(mBRCA))
{
tylko_jeden_gen <- allBRCA[,c(1,i,(ncol(mBRCA)+1):ncol(allBRCA))]
geny[i-1]<- names(tylko_jeden_gen)[2]
names(tylko_jeden_gen)[2]<-"val"
med<-median(na.omit(tylko_jeden_gen$val))
tryCatch({
p<-survfit(Surv(time, status == "dead")~(val>med), data=tylko_jeden_gen)
survy[[i-1]]<-p
},
error = function(e) {
print(paste0("zlo_surv",i))
})
tryCatch({
q <- tylko_jeden_gen[,'val',drop=FALSE]
histy[[i-1]]<-q
},
error = function(e) {
print(paste0("zlo_hist",i))
})
if(i/1000==round(i/1000))
{
print(paste(j,i))
}
}
if(!(dir.exists(paste0("./",cancer_types[j]))))
{
dir.create(paste0("./",cancer_types[j]))
}
saveRDS(geny,paste0("./",cancer_types[j],"/geny.RDS"))
saveRDS(survy,paste0("./",cancer_types[j],"/survy.RDS"))
saveRDS(histy,paste0("./",cancer_types[j],"/histy.RDS"))
}
shiny::runApp('shiny')
shiny::runApp('shiny')
library(ggplot2)
library(survMisc)
library(RTCGA.mRNA)
library(RTCGA.clinical)
cancer_types<-c("BRCA","COAD","COADREAD","GBMLGG","KIPAN","KIRC","KIRP","LGG",
"LUAD","LUSC","OV","READ","UCEC")
j <- 1
p<-sprintf("%s.mRNA",cancer_types[j])
q<-sprintf("%s.clinical",cancer_types[j])
namep<-data(list=p)
nameq<-data(list=q)
mBRCA<-.GlobalEnv[[namep]]
cBRCA<-.GlobalEnv[[nameq]]
cBRCA <- data.frame(time1=as.numeric(as.character(cBRCA$patient.days_to_death)),
time2=as.numeric(as.character(cBRCA$patient.days_to_last_followup)),
status = cBRCA$patient.vital_status,
barcode = cBRCA$patient.bcr_patient_barcode,
race=cBRCA$patient.race,
therapy=cBRCA$patient.drugs.drug.therapy_types.therapy_type)
cBRCA$time <- ifelse(is.na(cBRCA$time1), cBRCA$time2, cBRCA$time1)
mBRCA$bcr_patient_barcode<-tolower(substr(mBRCA$bcr_patient_barcode, 1, 12))
allBRCA<-merge(mBRCA,cBRCA,by.x="bcr_patient_barcode",by.y="barcode")
length_gen<-length(2:ncol(mBRCA))
histy<-list()
survy<-list()
geny<-c()
pvalues <- c()
for(i in 2:ncol(mBRCA))
i<-1
tylko_jeden_gen <- allBRCA[,c(1,i,(ncol(mBRCA)+1):ncol(allBRCA))]
geny[i-1]<- names(tylko_jeden_gen)[2]
names(tylko_jeden_gen)[2]<-"val"
med<-median(na.omit(tylko_jeden_gen$val))
prog <- 0.2*length(tylko_jeden_gen$val)
med
tylko_jeden_gen$val
i<-2
tylko_jeden_gen <- allBRCA[,c(1,i,(ncol(mBRCA)+1):ncol(allBRCA))]
geny[i-1]<- names(tylko_jeden_gen)[2]
names(tylko_jeden_gen)[2]<-"val"
med<-median(na.omit(tylko_jeden_gen$val))
prog <- 0.2*length(tylko_jeden_gen$val)
length(tylko_jeden_gen$val[tylko_jeden_gen$val>med])>prog & length(
tylko_jeden_gen$val[tylko_jeden_gen$val<med])>prog
model <- survdiff(Surv(time, status == "dead")~(val>mediana),
data=tylko_jeden_gen)
model <- survdiff(Surv(time, status == "dead")~(val>med),
data=tylko_jeden_gen)
pchisq(model$chisq, 1, lower.tail=FALSE)
for(i in 2:ncol(mBRCA))
{
tylko_jeden_gen <- allBRCA[,c(1,i,(ncol(mBRCA)+1):ncol(allBRCA))]
geny[i-1]<- names(tylko_jeden_gen)[2]
names(tylko_jeden_gen)[2]<-"val"
med<-median(na.omit(tylko_jeden_gen$val))
prog <- 0.2*length(tylko_jeden_gen$val)
tryCatch({
if(length(tylko_jeden_gen$val[tylko_jeden_gen$val>med])>prog & length(
tylko_jeden_gen$val[tylko_jeden_gen$val<med])>prog){
model <- survdiff(Surv(time, status == "dead")~(val>med),
data=tylko_jeden_gen)
pvalues[i-1] <- pchisq(model$chisq, 1, lower.tail=FALSE)
} else{
pvalues[i-1] <- 100; #Wystarczajaco duza wartosc zeby zmienna byla
#"nieistotna"
}
},
error = function(e) {
print(paste0("zlo_model",i))
})
tryCatch({
p<-survfit(Surv(time, status == "dead")~(val>med), data=tylko_jeden_gen)
survy[[i-1]]<-p
names(survy)[i-1] <- names(tylko_jeden_gen)[2]
},
error = function(e) {
print(paste0("zlo_surv",i))
})
tryCatch({
q <- tylko_jeden_gen[,'val',drop=FALSE]
histy[[i-1]]<-q
names(histy)[i-1] <- names(tylko_jeden_gen)[2]
},
error = function(e) {
print(paste0("zlo_hist",i))
})
if(i/1000==round(i/1000))
{
print(paste(j,i))
}
}
names(pvalues) <- geny
pvalues <- sort(pvalues)[1:1000]
pvalues[1:10]
geny_interesujace <- names(pvalues)
save(geny_interesujace, "D:/geny_interesujace_BRCA.Rda")
save(geny_interesujace, "D:/geny_interesujace_BRCA")
save(geny_interesujace, "D:/")
save(geny_interesujace, "D:/geny_interesujace_BRCA.Rds")
save(geny_interesujace, file="D:/geny_interesujace_BRCA.RData")
survy <- survy[geny_interesujace]
histy[1:10]
histy[1]
names(histy)
names(histy)[1:5]
names(histy)[3] <- "kotek"
names(histy)[1:5]
names(tylko_jeden_gen)[2]
histy<-list()
survy<-list()
geny<-c()
pvalues <- c()
for(i in 2:ncol(mBRCA))
{
tylko_jeden_gen <- allBRCA[,c(1,i,(ncol(mBRCA)+1):ncol(allBRCA))]
geny[i-1]<- names(tylko_jeden_gen)[2]
names(tylko_jeden_gen)[2]<-"val"
med<-median(na.omit(tylko_jeden_gen$val))
prog <- 0.2*length(tylko_jeden_gen$val)
tryCatch({
if(length(tylko_jeden_gen$val[tylko_jeden_gen$val>med])>prog & length(
tylko_jeden_gen$val[tylko_jeden_gen$val<med])>prog){
model <- survdiff(Surv(time, status == "dead")~(val>med),
data=tylko_jeden_gen)
pvalues[i-1] <- pchisq(model$chisq, 1, lower.tail=FALSE)
} else{
pvalues[i-1] <- 100; #Wystarczajaco duza wartosc zeby zmienna byla
#"nieistotna"
}
},
error = function(e) {
print(paste0("zlo_model",i))
})
tryCatch({
p<-survfit(Surv(time, status == "dead")~(val>med), data=tylko_jeden_gen)
survy[[i-1]]<-p
names(survy)[i-1] <- geny[i-1]
},
error = function(e) {
print(paste0("zlo_surv",i))
})
tryCatch({
q <- tylko_jeden_gen[,'val',drop=FALSE]
histy[[i-1]]<-q
names(histy)[i-1] <- geny[i-1]
},
error = function(e) {
print(paste0("zlo_hist",i))
})
if(i/1000==round(i/1000))
{
print(paste(j,i))
}
}
#### Wybranie 1000 najbardziej istotnych genow
names(pvalues) <- geny
pvalues <- sort(pvalues)[1:1000]
geny_interesujace <- names(pvalues)
save(geny_interesujace, file="D:/geny_interesujace_BRCA.RData")
save(geny_interesujace, file="D:/geny_interesujace_BRCA.RData")
names(histy)
survy <- survy[geny_interesujace]
histy <- histy[geny_interesujace]
if(!(dir.exists(paste0("./",cancer_types[j]))))
{
dir.create(paste0("./",cancer_types[j]))
}
saveRDS(geny_interesujace,paste0("./",cancer_types[j],"/geny.RDS"))
saveRDS(survy,paste0("./",cancer_types[j],"/survy.RDS"))
saveRDS(histy,paste0("./",cancer_types[j],"/histy.RDS"))
for (j in 2:length(cancer_types))
{
p<-sprintf("%s.mRNA",cancer_types[j])
q<-sprintf("%s.clinical",cancer_types[j])
namep<-data(list=p)
nameq<-data(list=q)
mBRCA<-.GlobalEnv[[namep]]
cBRCA<-.GlobalEnv[[nameq]]
cBRCA <- data.frame(time1=as.numeric(as.character(cBRCA$patient.days_to_death)),
time2=as.numeric(as.character(cBRCA$patient.days_to_last_followup)),
status = cBRCA$patient.vital_status,
barcode = cBRCA$patient.bcr_patient_barcode,
race=cBRCA$patient.race,
therapy=cBRCA$patient.drugs.drug.therapy_types.therapy_type)
cBRCA$time <- ifelse(is.na(cBRCA$time1), cBRCA$time2, cBRCA$time1)
mBRCA$bcr_patient_barcode<-tolower(substr(mBRCA$bcr_patient_barcode, 1, 12))
allBRCA<-merge(mBRCA,cBRCA,by.x="bcr_patient_barcode",by.y="barcode")
length_gen<-length(2:ncol(mBRCA))
histy<-list()
survy<-list()
geny<-c()
pvalues <- c()
for(i in 2:ncol(mBRCA))
{
tylko_jeden_gen <- allBRCA[,c(1,i,(ncol(mBRCA)+1):ncol(allBRCA))]
geny[i-1]<- names(tylko_jeden_gen)[2]
names(tylko_jeden_gen)[2]<-"val"
med<-median(na.omit(tylko_jeden_gen$val))
prog <- 0.2*length(tylko_jeden_gen$val)
tryCatch({
if(length(tylko_jeden_gen$val[tylko_jeden_gen$val>med])>prog & length(
tylko_jeden_gen$val[tylko_jeden_gen$val<med])>prog){
model <- survdiff(Surv(time, status == "dead")~(val>med),
data=tylko_jeden_gen)
pvalues[i-1] <- pchisq(model$chisq, 1, lower.tail=FALSE)
} else{
pvalues[i-1] <- 100; #Wystarczajaco duza wartosc zeby zmienna byla
#"nieistotna"
}
},
error = function(e) {
print(paste0("zlo_model",i))
})
tryCatch({
p<-survfit(Surv(time, status == "dead")~(val>med), data=tylko_jeden_gen)
survy[[i-1]]<-p
names(survy)[i-1] <- geny[i-1]
},
error = function(e) {
print(paste0("zlo_surv",i))
})
tryCatch({
q <- tylko_jeden_gen[,'val',drop=FALSE]
histy[[i-1]]<-q
names(histy)[i-1] <- geny[i-1]
},
error = function(e) {
print(paste0("zlo_hist",i))
})
if(i/1000==round(i/1000))
{
print(paste(j,i))
}
}
#### Wybranie 1000 najbardziej istotnych genow
names(pvalues) <- geny
pvalues <- sort(pvalues)[1:1000]
geny_interesujace <- names(pvalues)
#save(geny_interesujace, file="D:/geny_interesujace_BRCA.RData")
survy <- survy[geny_interesujace]
histy <- histy[geny_interesujace]
if(!(dir.exists(paste0("./",cancer_types[j]))))
{
dir.create(paste0("./",cancer_types[j]))
}
saveRDS(geny_interesujace,paste0("./",cancer_types[j],"/geny.RDS"))
saveRDS(survy,paste0("./",cancer_types[j],"/survy.RDS"))
saveRDS(histy,paste0("./",cancer_types[j],"/histy.RDS"))
}
getwd()
cancer_types<-c("BRCA","COAD","COADREAD","GBMLGG","KIPAN","KIRC","KIRP",
"LGG","LUAD","LUSC","OV","READ","UCEC")
for(i in 1:length(cancer_types)){
eval(parse(tekst=paste0(cancer_types[i],"geny <- readRDS('../",cancer_types[i],"/geny.RDS')")))
eval(parse(tekst=paste0(cancer_types[i],"histy <- readRDS('../",cancer_types[i],"/histy.RDS')")))
eval(parse(tekst=paste0(cancer_types[i],"survy <- readRDS('../",cancer_types[i],"/survy.RDS')")))
}
for(i in 1:length(cancer_types)){
eval(parse(text=paste0(cancer_types[i],"geny <- readRDS('../",cancer_types[i],"/geny.RDS')")))
eval(parse(text=paste0(cancer_types[i],"histy <- readRDS('../",cancer_types[i],"/histy.RDS')")))
eval(parse(text=paste0(cancer_types[i],"survy <- readRDS('../",cancer_types[i],"/survy.RDS')")))
}
setwd("C:\Users\wyszy\OneDrive\Studia\Magisterka\Rok 2 sem 1\Warsztaty badawcze\Projekt końcowy\biomarkery_slonce\shiny")
setwd("C:/Users/wyszy/OneDrive/Studia/Magisterka/Rok 2 sem 1/Warsztaty badawcze/Projekt końcowy/biomarkery_slonce/shiny")
for(i in 1:length(cancer_types)){
eval(parse(text=paste0(cancer_types[i],"geny <- readRDS('../",cancer_types[i],"/geny.RDS')")))
eval(parse(text=paste0(cancer_types[i],"histy <- readRDS('../",cancer_types[i],"/histy.RDS')")))
eval(parse(text=paste0(cancer_types[i],"survy <- readRDS('../",cancer_types[i],"/survy.RDS')")))
}
eval(parse(text=paste0("geny <- ", "BRCA", "geny")))
text <- paste('"', geny, '"', sep="")
text <- paste(text, text, sep="=", collapse=", ")
text <- paste0('list(', text, ')')
lista <- eval(parse(text=text))
lista
shiny::runApp()
cancer_types<-c("BRCA","COAD","COADREAD","GBMLGG","KIPAN","KIRC","KIRP",
"LGG","LUAD","LUSC","OV","READ","UCEC")
setwd("C:/Users/wyszy/OneDrive/Studia/Magisterka/Rok 2 sem 1/Warsztaty badawcze/Projekt końcowy/biomarkery_slonce/shiny")
for(i in 1:length(cancer_types)){
eval(parse(text=paste0(cancer_types[i],"geny <- readRDS('../",cancer_types[i],"/geny.RDS')")))
eval(parse(text=paste0(cancer_types[i],"histy <- readRDS('../",cancer_types[i],"/histy.RDS')")))
eval(parse(text=paste0(cancer_types[i],"survy <- readRDS('../",cancer_types[i],"/survy.RDS')")))
}
eval(parse(text=paste0("q <- ", "BRCA", "histy['","LLRRC8D","'][1]")))
BRCAhisty["LLRRC8D"]
BRCAhisty[1]
eval(parse(text=paste0("q <- ", "BRCA", "histy['","LRRC8D","'][1]")))
q
eval(parse(text=paste0("q <- ", "BRCA", "histy[['","LRRC8D","']]")))
q
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
View(q)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
sample(1:30,1)
"metody hierarchiczne", "metody aglomeracyjne", "sieci neuronowe",
modele <- c("k-średnich", "NN", "drzewa CART", "drzewo klasyfikacyjne",
"drzewo losowe", "lasy losowe","bootsrap", "kroswalidacja",
"LDA", "QDA", "Logitowy", "Probitowy", "Analiza korespondencji",
"bagging", "boosting", "regresja", "PCA", "szeregi czasowe",
"metody hierarchiczne", "metody aglomeracyjne", "sieci neuronowe",
"sieci Kohonena")
modele[2]
rep(modele[2], sample(1:30,1))
str <- ""
for(i in 1:length(modele)){
str=paste(str, rep(modele[i], sample(1:30,1)),sep=" ", collapse= " ")
}
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
