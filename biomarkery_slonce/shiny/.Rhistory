#saveRDS(survy,paste0("./",cancer_types[j],"/survy.RDS"))
pvalues <- sort(pvalues)
saveRDS(histy,paste0("./shiny/data/",cancer_types[j],"dane.RDS"))
saveRDS(pvalues,paste0("./shiny/data/",cancer_types[j],"pvalue.RDS"))
}
View(tylko_jeden_gen)
model <- survdiff(Surv(time, status == "dead")~(val>med),
data=tylko_jeden_gen)
model
tylko_jeden_gen <- tylko_jeden_gen[,c(1,2,5)]
survdiff(Surv(time, status == "dead")~(val>med),
data=tylko_jeden_gen)
tylko_jeden_gen <- allBRCA[,c(1,i,(ncol(mBRCA)+1):ncol(allBRCA))]
View(tylko_jeden_gen)
tylko_jeden_gen <- tylko_jeden_gen[,c(1,2,5,8)]
names(tylko_jeden_gen)[2]<-"val"
survdiff(Surv(time, status == "dead")~(val>med),
data=tylko_jeden_gen)
allBRCA[1:20,1:20]
(ncol(mBRCA)+1):ncol(allBRCA)
allBRCA[1:10,c(17816, 17817, 17818, 17819, 17820, 17821)]
View(mBRCA)
View(cBRCA)
cBRCA <- cBRCA[ , c(3,4,7)]
View(cBRCA)
tmp <- c(1,2,3,4,5)
ifelse(tmp<4,tmp,"-")
remove(tmp)
library(ggplot2)
library(survMisc)
library(RTCGA.mRNA)
library(RTCGA.clinical)
cancer_types<-c("BRCA","COAD","COADREAD","GBMLGG","KIPAN","KIRC","KIRP","LGG",
"LUAD","LUSC","OV","READ","UCEC")
setwd("C:/Users/wyszy/OneDrive/Studia/Magisterka/Rok 2 sem 1/Warsztaty badawcze/Projekt koÅ„cowy/biomarkery_slonce")
for (j in 1:length(cancer_types))
{
p<-sprintf("%s.mRNA",cancer_types[j])
q<-sprintf("%s.clinical",cancer_types[j])
namep<-data(list=p)
nameq<-data(list=q)
mBRCA<-.GlobalEnv[[namep]]
cBRCA<-.GlobalEnv[[nameq]]
cBRCA <- data.frame(time1=as.numeric(as.character(cBRCA$patient.days_to_death)),
time2=as.numeric(as.character(cBRCA$patient.days_to_last_followup)),
status = cBRCA$patient.vital_status,
barcode = cBRCA$patient.bcr_patient_barcode,
race=cBRCA$patient.race,
therapy=cBRCA$patient.drugs.drug.therapy_types.therapy_type)
cBRCA$time <- ifelse(is.na(cBRCA$time1), cBRCA$time2, cBRCA$time1)
mBRCA$bcr_patient_barcode<-tolower(substr(mBRCA$bcr_patient_barcode, 1, 12))
cBRCA <- cBRCA[ , c(3,4,7)]
allBRCA<-merge(mBRCA,cBRCA,by.x="bcr_patient_barcode",by.y="barcode")
length_gen<-length(2:ncol(mBRCA))
pvalues <- c()
for(i in 2:ncol(mBRCA))
{
tylko_jeden_gen <- allBRCA[,c(1,i,(ncol(mBRCA)+1):ncol(allBRCA))]
names(tylko_jeden_gen)[2]<-"val"
med<-median(na.omit(tylko_jeden_gen$val))
prog <- 0.2*length(tylko_jeden_gen$val)
tryCatch({
if(length(tylko_jeden_gen$val[tylko_jeden_gen$val>med])>prog & length(
tylko_jeden_gen$val[tylko_jeden_gen$val<med])>prog){
model <- survdiff(Surv(time, status == "dead")~(val>med),
data=tylko_jeden_gen)
pvalues[i-1] <- pchisq(model$chisq, 1, lower.tail=FALSE)
} else{
pvalues[i-1] <- 100; #Wystarczajaco duza wartosc zeby zmienna byla
#"nieistotna"
}
names(pvalues)[i-1] <- names(tylko_jeden_gen)[2]
},
error = function(e) {
print(paste0("zlo_model",i))
})
if(i/1000==round(i/1000))
{
print(paste(j,i))
}
}
pvalues <- sort(pvalues)
saveRDS(allBRCA,paste0("./shiny/data/",cancer_types[j],"dane.RDS"))
saveRDS(pvalues,paste0("./shiny/data/",cancer_types[j],"pvalue.RDS"))
}
shiny::runApp('shiny')
shiny::runApp('shiny')
shiny::runApp('shiny')
shiny::runApp('shiny')
text1 <- paste0('"',names(pvalues), " (p-value: ",
ifelse(pvalue<100, pvalue, "-"),')"="',names(pvalue),'"')
paste0('"',names(pvalues), " (p-value: ",
ifelse(pvalues<100, pvalues, "-"),')"="',names(pvalues),'"')
options("scipen"=-100, "digits"=4)
text1 <- paste0('"',names(pvalues), " (p-value: ",
ifelse(pvalues<100, pvalues, "-"),')"="',names(pvalues),'"')
paste0('"',names(pvalues), " (p-value: ",
ifelse(pvalues<100, pvalues, "-"),')"="',names(pvalues),'"')
options("scipen"=4, "digits"=4)
paste0('"',names(pvalues), " (p-value: ",
ifelse(pvalues<100, pvalues, "-"),')"="',names(pvalues),'"')
options("scipen"=-4, "digits"=4)
pvalues
options("scipen"=-3, "digits"=4)
pvalues
options("scipen"=-2, "digits"=2)
paste0('"',names(pvalues), " (p-value: ",
ifelse(pvalues<100, pvalues, "-"),')"="',names(pvalues),'"')
pvalues
paste0('"',names(pvalues), " (p-value: ",
ifelse(pvalues<100, pvalues, "-"),')"="',names(pvalues),'"')
format(0.67879837987, scientific=TRUE);
text1 <- paste0('"',names(pvalues), " (p-value: ",
ifelse(pvalues<100, format(pvalues,scientific=TRUE),
"-"),')"="',names(pvalues),'"')
paste0('"',names(pvalues), " (p-value: ",
ifelse(pvalues<100, format(pvalues,scientific=TRUE),
"-"),')"="',names(pvalues),'"')
for (j in 11:length(cancer_types))
{
p<-sprintf("%s.mRNA",cancer_types[j])
q<-sprintf("%s.clinical",cancer_types[j])
namep<-data(list=p)
nameq<-data(list=q)
mBRCA<-.GlobalEnv[[namep]]
cBRCA<-.GlobalEnv[[nameq]]
cBRCA <- data.frame(time1=as.numeric(as.character(cBRCA$patient.days_to_death)),
time2=as.numeric(as.character(cBRCA$patient.days_to_last_followup)),
status = cBRCA$patient.vital_status,
barcode = cBRCA$patient.bcr_patient_barcode,
race=cBRCA$patient.race,
therapy=cBRCA$patient.drugs.drug.therapy_types.therapy_type)
cBRCA$time <- ifelse(is.na(cBRCA$time1), cBRCA$time2, cBRCA$time1)
mBRCA$bcr_patient_barcode<-tolower(substr(mBRCA$bcr_patient_barcode, 1, 12))
cBRCA <- cBRCA[ , c(3,4,7)]
allBRCA<-merge(mBRCA,cBRCA,by.x="bcr_patient_barcode",by.y="barcode")
length_gen<-length(2:ncol(mBRCA))
pvalues <- c()
for(i in 2:ncol(mBRCA))
{
tylko_jeden_gen <- allBRCA[,c(1,i,(ncol(mBRCA)+1):ncol(allBRCA))]
names(pvalues)[i-1] <- names(tylko_jeden_gen)[2]
names(tylko_jeden_gen)[2]<-"val"
med<-median(na.omit(tylko_jeden_gen$val))
prog <- 0.2*length(tylko_jeden_gen$val)
tryCatch({
if(length(tylko_jeden_gen$val[tylko_jeden_gen$val>med])>prog & length(
tylko_jeden_gen$val[tylko_jeden_gen$val<med])>prog){
model <- survdiff(Surv(time, status == "dead")~(val>med),
data=tylko_jeden_gen)
pvalues[i-1] <- pchisq(model$chisq, 1, lower.tail=FALSE)
} else{
pvalues[i-1] <- 100; #Wystarczajaco duza wartosc zeby zmienna byla
#"nieistotna"
}
},
error = function(e) {
print(paste0("zlo_model",i))
})
if(i/1000==round(i/1000))
{
print(paste(j,i))
}
}
pvalues <- sort(pvalues)
options("scipen"=-2, "digits"=2)
text1 <- paste0('"',names(pvalues), " (p-value: ",
ifelse(pvalues<100, format(pvalues,scientific=TRUE),
"-"),')"="',names(pvalues),'"')
eval(parse(text=paste0("genes_list <- list(", text1, ")")))
saveRDS(allBRCA,paste0("./shiny/data/",cancer_types[j],"dane.RDS"))
saveRDS(pvalues,paste0("./shiny/data/",cancer_types[j],"pvalue.RDS"))
saveRDS(genes_list,paste0("./shiny/data/",cancer_types[j],"genes_list.RDS"))
}
for (j in 11:length(cancer_types))
{
p<-sprintf("%s.mRNA",cancer_types[j])
q<-sprintf("%s.clinical",cancer_types[j])
namep<-data(list=p)
nameq<-data(list=q)
mBRCA<-.GlobalEnv[[namep]]
cBRCA<-.GlobalEnv[[nameq]]
cBRCA <- data.frame(time1=as.numeric(as.character(cBRCA$patient.days_to_death)),
time2=as.numeric(as.character(cBRCA$patient.days_to_last_followup)),
status = cBRCA$patient.vital_status,
barcode = cBRCA$patient.bcr_patient_barcode,
race=cBRCA$patient.race,
therapy=cBRCA$patient.drugs.drug.therapy_types.therapy_type)
cBRCA$time <- ifelse(is.na(cBRCA$time1), cBRCA$time2, cBRCA$time1)
mBRCA$bcr_patient_barcode<-tolower(substr(mBRCA$bcr_patient_barcode, 1, 12))
cBRCA <- cBRCA[ , c(3,4,7)]
allBRCA<-merge(mBRCA,cBRCA,by.x="bcr_patient_barcode",by.y="barcode")
length_gen<-length(2:ncol(mBRCA))
pvalues <- c()
for(i in 2:ncol(mBRCA))
{
tylko_jeden_gen <- allBRCA[,c(1,i,(ncol(mBRCA)+1):ncol(allBRCA))]
tmp <- names(tylko_jeden_gen)[2]
names(tylko_jeden_gen)[2]<-"val"
med<-median(na.omit(tylko_jeden_gen$val))
prog <- 0.2*length(tylko_jeden_gen$val)
tryCatch({
if(length(tylko_jeden_gen$val[tylko_jeden_gen$val>med])>prog & length(
tylko_jeden_gen$val[tylko_jeden_gen$val<med])>prog){
model <- survdiff(Surv(time, status == "dead")~(val>med),
data=tylko_jeden_gen)
pvalues[i-1] <- pchisq(model$chisq, 1, lower.tail=FALSE)
} else{
pvalues[i-1] <- 100; #Wystarczajaco duza wartosc zeby zmienna byla
#"nieistotna"
}
names(pvalues)[i-1] <- tmp
},
error = function(e) {
print(paste0("zlo_model",i))
})
if(i/1000==round(i/1000))
{
print(paste(j,i))
}
}
pvalues <- sort(pvalues)
options("scipen"=-2, "digits"=2)
text1 <- paste0('"',names(pvalues), " (p-value: ",
ifelse(pvalues<100, format(pvalues,scientific=TRUE),
"-"),')"="',names(pvalues),'"')
eval(parse(text=paste0("genes_list <- list(", text1, ")")))
saveRDS(allBRCA,paste0("./shiny/data/",cancer_types[j],"dane.RDS"))
saveRDS(pvalues,paste0("./shiny/data/",cancer_types[j],"pvalue.RDS"))
saveRDS(genes_list,paste0("./shiny/data/",cancer_types[j],"genes_list.RDS"))
}
shiny::runApp('shiny')
shiny::runApp('shiny')
paste0('"',names(pvalues), " (p-value: ",
ifelse(pvalues<100, format(pvalues,scientific=TRUE),
"-"),')"="',names(pvalues),'"')
eval(parse(text=paste0("genes_list <- list(", text1, ")")))
text1 <- paste0('"',names(pvalues), " (p-value: ",
ifelse(pvalues<100, format(pvalues,scientific=TRUE),
"-"),')"="',names(pvalues),'"')
text1 <- paste0('"',names(pvalues), " (p-value: ",
ifelse(pvalues<100, format(pvalues,scientific=TRUE),
"-"),')"="',names(pvalues),'"')
eval(parse(text=paste0("genes_list <- list(", text1, ")")))
paste0("genes_list <- list(", text1, ")")
text1 <- paste0('"',names(pvalues), " (p-value: ",
ifelse(pvalues<100, format(pvalues,scientific=TRUE),
"-"),')"="',names(pvalues),'"', collapse=", ")
eval(parse(text=paste0("genes_list <- list(", text1, ")")))
for (j in 12:length(cancer_types))
{
p<-sprintf("%s.mRNA",cancer_types[j])
q<-sprintf("%s.clinical",cancer_types[j])
namep<-data(list=p)
nameq<-data(list=q)
mBRCA<-.GlobalEnv[[namep]]
cBRCA<-.GlobalEnv[[nameq]]
cBRCA <- data.frame(time1=as.numeric(as.character(cBRCA$patient.days_to_death)),
time2=as.numeric(as.character(cBRCA$patient.days_to_last_followup)),
status = cBRCA$patient.vital_status,
barcode = cBRCA$patient.bcr_patient_barcode,
race=cBRCA$patient.race,
therapy=cBRCA$patient.drugs.drug.therapy_types.therapy_type)
cBRCA$time <- ifelse(is.na(cBRCA$time1), cBRCA$time2, cBRCA$time1)
mBRCA$bcr_patient_barcode<-tolower(substr(mBRCA$bcr_patient_barcode, 1, 12))
cBRCA <- cBRCA[ , c(3,4,7)]
allBRCA<-merge(mBRCA,cBRCA,by.x="bcr_patient_barcode",by.y="barcode")
length_gen<-length(2:ncol(mBRCA))
pvalues <- c()
for(i in 2:ncol(mBRCA))
{
tylko_jeden_gen <- allBRCA[,c(1,i,(ncol(mBRCA)+1):ncol(allBRCA))]
tmp <- names(tylko_jeden_gen)[2]
names(tylko_jeden_gen)[2]<-"val"
med<-median(na.omit(tylko_jeden_gen$val))
prog <- 0.2*length(tylko_jeden_gen$val)
tryCatch({
if(length(tylko_jeden_gen$val[tylko_jeden_gen$val>med])>prog & length(
tylko_jeden_gen$val[tylko_jeden_gen$val<med])>prog){
model <- survdiff(Surv(time, status == "dead")~(val>med),
data=tylko_jeden_gen)
pvalues[i-1] <- pchisq(model$chisq, 1, lower.tail=FALSE)
} else{
pvalues[i-1] <- 100; #Wystarczajaco duza wartosc zeby zmienna byla
#"nieistotna"
}
names(pvalues)[i-1] <- tmp
},
error = function(e) {
print(paste0("zlo_model",i))
})
if(i/1000==round(i/1000))
{
print(paste(j,i))
}
}
pvalues <- sort(pvalues)
options("scipen"=-2, "digits"=2)
text1 <- paste0('"',names(pvalues), " (p-value: ",
ifelse(pvalues<100, format(pvalues,scientific=TRUE),
"-"),')"="',names(pvalues),'"', collapse=", ")
eval(parse(text=paste0("genes_list <- list(", text1, ")")))
saveRDS(allBRCA,paste0("./shiny/data/",cancer_types[j],"dane.RDS"))
saveRDS(pvalues,paste0("./shiny/data/",cancer_types[j],"pvalue.RDS"))
saveRDS(genes_list,paste0("./shiny/data/",cancer_types[j],"genes_list.RDS"))
}
shiny::runApp('shiny')
shiny::runApp('shiny')
shiny::runApp('shiny')
shiny::runApp()
shiny::runApp('shiny')
tmp <- readRDS("D:/GitHub/WarsztatyBadawcze_moje/biomarkery_slonce/KIRC/histy.RDS")
tmp[[1]]
type(tmp[[1]])
typeof(tmp[[1]])
typeof(tmp[[1]][[1]])
tmp[[1]][[1]]
shiny::runApp('shiny')
shiny::runApp('shiny')
View(UCEC.mRNA)
q <- tylko_jeden_gen[,'val',drop=FALSE]
View(q)
typeof(q)
unlist(q)
shiny::runApp('shiny')
shiny::runApp('shiny')
shiny::runApp('shiny')
shiny::runApp('shiny')
shiny::runApp('shiny')
shiny::runApp('shiny')
shiny::runApp('shiny')
shiny::runApp('shiny')
shiny::runApp('shiny')
z <- 0
tmp <- if(z==0){
z <- 15/6
z
} else {
z <- 1/15
z
}
tmp
shiny::runApp('shiny')
shiny::runApp('shiny')
shiny::runApp('shiny')
View(cBRCA)
shiny::runApp('shiny')
shiny::runApp('shiny')
shiny::runApp('shiny')
shiny::runApp('shiny')
shiny::runApp('shiny')
shiny::runApp('shiny')
shiny::runApp('shiny')
shiny::runApp('shiny')
shiny::runApp('shiny')
input$cancer <- "READ"
input <- list()
input$cancer <- "READ"
input$choosen_gene <- "ZNF391"
eval(parse(text=paste0(input$cancer,
"data <- readRDS('D:/GitHub/WarsztatyBadawcze_moje/biomarkery_slonce/shiny/data/",
input$cancer,"dane.RDS')")))
eval(parse(text=paste0(input$cancer,
"data <- readRDS('C:/Users/wyszy/OneDrive/Studia/Magisterka/Rok 2 sem 1/Warsztaty badawcze/Projekt koÅ„cowy/biomarkery_slonce/shiny/data/",
input$cancer,"dane.RDS')")))
eval(parse(text=paste0("tmp <- which(colnames(",input$cancer,"data)=='",
input$choosen_gene,"')")))
eval(parse(text=paste0("dane <- ",input$cancer, "data[,c(1,",
tmp,",(ncol(",
input$cancer,"data)-2):ncol(",
input$cancer,"data))]")))
eval(parse(text=paste0("med <- median(dane[,'",input$choosen_gene,
"'], na.rm=TRUE)")))
med
eval(parse(text=paste0(
'p<-survfit(Surv(time, status == "dead")~(', input$choosen_gene,
'>med), data=dane)')))
p<-autoplot(p,xLab="time",yLab="1-P(death)",
title=paste0("Survival plot for mRNA ",input$wybrany_gen),
legTitle = "Stratum",
legLabs=c("Patients with value > median", "Patients with value < median"))
shiny::runApp('shiny')
shiny::runApp('shiny')
shiny::runApp('shiny')
shiny::runApp('shiny')
shiny::runApp('shiny')
shiny::runApp('shiny')
shiny::runApp('shiny')
shiny::runApp('shiny')
round(0.24363465346,3)
round(0.24363465346,4)
round(0.24363465346,digits=4)
shiny::runApp('shiny')
shiny::runApp('shiny')
shiny::runApp('shiny')
shiny::runApp('shiny')
shiny::runApp('shiny')
x <- c(0.2984924192,0.2984028420938402948,0.98979798)
x <- round(x,4)
x
round(x,10)
shiny::runApp('shiny')
shiny::runApp('shiny')
shiny::runApp('shiny')
shiny::runApp('shiny')
shiny::runApp('shiny')
shiny::runApp('shiny')
shiny::runApp('shiny')
shiny::runApp('shiny')
shiny::runApp('shiny')
shiny::runApp('shiny')
shiny::runApp('shiny')
shiny::runApp('shiny')
shiny::runApp('shiny')
shiny::runApp('shiny')
shiny::runApp('shiny')
shiny::runApp('shiny')
shiny::runApp('shiny')
shiny::runApp('shiny')
shiny::runApp('shiny')
shiny::runApp('shiny')
update.packages("ggplot")
shiny::runApp('shiny')
shiny::runApp('shiny')
shiny::runApp('shiny')
library("ggplot2")
shiny::runApp('shiny')
shiny::runApp('shiny')
library(ggplot2)
library(survMisc)
library(RTCGA.mRNA)
library(RTCGA.clinical)
cancer_types<-c("BRCA","COAD","COADREAD","GBMLGG","KIPAN","KIRC","KIRP","LGG",
"LUAD","LUSC","OV","READ","UCEC")
setwd("C:/Users/wyszy/OneDrive/Studia/Magisterka/Rok 2 sem 1/Warsztaty badawcze/Projekt koÅ„cowy/biomarkery_slonce")
for (j in 1:length(cancer_types))
{
p<-sprintf("%s.mRNA",cancer_types[j])
q<-sprintf("%s.clinical",cancer_types[j])
namep<-data(list=p)
nameq<-data(list=q)
mBRCA<-.GlobalEnv[[namep]]
cBRCA<-.GlobalEnv[[nameq]]
cBRCA <- data.frame(time1=as.numeric(as.character(cBRCA$patient.days_to_death)),
time2=as.numeric(as.character(cBRCA$patient.days_to_last_followup)),
status = cBRCA$patient.vital_status,
barcode = cBRCA$patient.bcr_patient_barcode,
race=cBRCA$patient.race,
therapy=cBRCA$patient.drugs.drug.therapy_types.therapy_type)
cBRCA$time <- ifelse(is.na(cBRCA$time1), cBRCA$time2, cBRCA$time1)
mBRCA$bcr_patient_barcode<-tolower(substr(mBRCA$bcr_patient_barcode, 1, 12))
cBRCA <- cBRCA[ , c(3,4,7)]
allBRCA<-merge(mBRCA,cBRCA,by.x="bcr_patient_barcode",by.y="barcode")
length_gen<-length(2:ncol(mBRCA))
pvalues <- c()
for(i in 2:ncol(mBRCA))
{
tylko_jeden_gen <- allBRCA[,c(1,i,(ncol(mBRCA)+1):ncol(allBRCA))]
tmp <- names(tylko_jeden_gen)[2]
names(tylko_jeden_gen)[2]<-"val"
med<-median(na.omit(tylko_jeden_gen$val))
prog <- 0.2*length(tylko_jeden_gen$val)
tryCatch({
if(length(tylko_jeden_gen$val[tylko_jeden_gen$val>med])>prog & length(
tylko_jeden_gen$val[tylko_jeden_gen$val<med])>prog){
model <- survdiff(Surv(time, status == "dead")~(val>med),
data=tylko_jeden_gen)
pvalues[i-1] <- pchisq(model$chisq, 1, lower.tail=FALSE)
} else{
pvalues[i-1] <- 100; #Wystarczajaco duza wartosc zeby zmienna byla
#"nieistotna"
}
names(pvalues)[i-1] <- tmp
},
error = function(e) {
print(paste0("zlo_model",i))
})
if(i/1000==round(i/1000))
{
print(paste(j,i))
}
}
pvalues <- sort(pvalues)
options("scipen"=-2, "digits"=2)
text1 <- paste0('"',names(pvalues), " (p-value: ",
ifelse(pvalues<100, format(pvalues,scientific=TRUE),
"-"),')"="',names(pvalues),'"', collapse=", ")
eval(parse(text=paste0("genes_list <- list(", text1, ")")))
saveRDS(allBRCA,paste0("./shiny/data/",cancer_types[j],"dane.RDS"))
saveRDS(pvalues,paste0("./shiny/data/",cancer_types[j],"pvalue.RDS"))
saveRDS(genes_list,paste0("./shiny/data/",cancer_types[j],"genes_list.RDS"))
}
shiny::runApp('shiny')
shiny::runApp('shiny')
tmp <- readRDS("./shiny/data/COADdane.RDS")
tmp <- tmp[,"C1orf157"]
which(is.na(tmp))
shiny::runApp('shiny')
shiny::runApp('shiny')
shiny::runApp('shiny')
shiny::runApp('shiny')
shiny::runApp('shiny')
shiny::runApp('C:/Users/wyszy/Desktop/Aplikacja')
install.packages("dygraphs")
shiny::runApp('C:/Users/wyszy/Desktop/Aplikacja')
install.packges("tidyr")
install.packages("tidyr")
shiny::runApp('C:/Users/wyszy/Desktop/Aplikacja')
shiny::runApp('shiny')
shiny::runApp('shiny')
shiny::runApp('shiny')
shiny::runApp('shiny')
